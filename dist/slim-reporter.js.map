{"version":3,"file":"slim-reporter.js","sources":["../src/utils.js","../src/events.js","../src/logEvent.js","../src/results/status.js","../src/results/tree.js","../src/results/resolvePath.js","../src/states/Failure.js","../src/states/Log.js","../src/states/state.js","../src/options.js","../src/looks/theme.js","../src/looks/style.js","../src/components/Entry.js","../src/components/Entries.js","../src/components/Title.js","../src/components/Loading.js","../src/components/Report.js","../src/components/Summary.js","../src/components/Failures.js","../src/components/Log.js","../src/render.js","../src/io/print.js","../src/io/resize.js","../src/io/clock.js","../src/index.js"],"sourcesContent":["export const id = x => x;\nconst compose = (f, g) => x => f(g(x));\nconst apply = (f, x) => f(x);\nexport const pipe = (...fs) => fs.reduceRight(compose, id);\nexport const _ = f => (x, ...xs) => xs.reduce(apply, f(x));\nexport const eq = a => b => a === b;\nexport const prop = p => a => a[p];\nexport const defined = x => x !== undefined;\nexport const hasProp = _(p => pipe(prop(p), defined));\nexport const either = _(p => t => f => x => p(x) ? t(x) : f(x));\nexport const or = _(f => g => x => f(x) || g(x));\nexport const head = ([x]) => x;\nexport const last = arr => arr[arr.length -1];\nexport const init = arr => arr.slice(0, -1);\nexport const empty = arr => !arr.length;\nexport const not = f => (...xs) => !f(...xs);\n\nexport const $ = method => (...args) => a => {\n    if (!a || !a[method])\n        throw new Error(`${a} doesn't have a method ${method}`);\n    return a[method](...args)\n};\n\nexport const map = f => a =>\n    Array.isArray(a)\n    ? a.map(f)\n    : Object.fromEntries(\n        Object.entries(a).map(f)\n    )\n;\n\nexport const $$ = (...xs) => xs.map($);\n\nexport const repeat = _(s => n => Array(n).fill(s).join(''));\nexport const spaces = repeat(' ');\nexport const wrap = (before, after = before) => x => before + x + after;\nexport const splitJoin = (f, s1, s2 = s1) => str =>\n    f(str.split(s1)).join(s2)\n;\n\nexport const indent = _(n =>\n    splitJoin(xs => xs.map(x => spaces(n) + x), '\\n')\n);\n\nexport const wrapLine = _(max => indentation => str => {\n    const lines = [''];\n    let current = 0;\n\n    str.split(' ').forEach(word => {\n        const length = word.length\n            + indentation\n            + lines[current].length\n        ;\n        if (length > max) lines[++current] = '';\n\n        lines[current] += ' ' + word\n    });\n\n    return lines\n        .map(x => x.trim())\n        .map((x, i) => !i ? x : spaces(indentation) + x)\n    ;\n});\n\nexport const safe = f => {\n    let out;\n    try {\n        out = f()\n    } catch {\n        out = null\n    }\n    return out;\n};\n","import { _, not } from './utils.js';\n\nexport const Event = (type, value) => {\n    const is = (...xs) => xs.reduce(\n        (a, b) => a || b === type,\n        false\n    );\n    const isNot = not(is);\n    return { value, is, isNot };\n};\n\nexport const passEvent = _(store => f => type => value =>\n    f({ ...store.frame, event: Event(type, value) })\n);\n","const isLog = text =>\n    text && text.substring(0, 4) === '#   '\n;\n\nconst cleanup = t => t.replace('#   ', '');\n\nconst removeLastReturn = log =>({\n    ...log, message: log.message.replace(/\\n$/m, '')\n});\n\nconst concatMessage = (log, message) => ({\n    ...log, message: log.message + message\n});\n\nconst local = {\n    result: null,\n    log: null\n};\n\n// comments are emitted line by line with no reference to their parent result\n\nexport default (send, source) => value => {\n    const { log, result } = local;\n\n    if(source.is('comment') && isLog(value)) {\n        const message = cleanup(value);\n        if(log && log.result === result) {\n            local.log = concatMessage(log, message);\n        } else {\n            local.log = { result, message };\n        }\n    } else if (source.is('result')) {\n        if (log) send(removeLastReturn(log))\n        local.result = value;\n        local.log = null;\n    } else if (source.is('complete')) {\n        if(log) send(removeLastReturn(log))\n    }\n};\n","import { hasProp, either, eq, $ } from '../utils.js';\nconst map = $('map');\n\nconst reduceStatus = xs =>\n      xs.every(eq('pass')) ? 'pass'\n    : xs.find(eq('fail'))  ? 'fail'\n    : xs.every(eq('todo')) ? 'todo'\n    : xs.every(eq('skip')) ? 'skip'\n    : 'mixed'\n;\n\nconst isLeaf = hasProp('ok');\n\nconst getStatus = searchChild => either(\n    isLeaf,\n    x =>\n          x.skip ? 'skip'\n        : x.todo ? 'todo'\n        : x.ok ? 'pass'\n        : 'fail',\n    searchChild\n);\n\nexport const statusOf = getStatus(\n    childNode =>\n    childNode\n    |> Object.values\n    |> map(getStatus(statusOf))\n    |> reduceStatus\n);\n","import { hasProp } from '../utils.js';\nimport { statusOf } from './status.js';\nimport { $$, _ } from '../utils.js';\nconst [find, reduce] = $$('find', 'reduce');\n\nconst push = (path, result, node, index = 0) => {\n    const name = path[index];\n    const next = node ? node[name] : {};\n    const done = index === path.length - 1;\n    return done\n        ? { ...node, [name]: result }\n        : { ...node, [name]: push(path, result, next, index + 1) }\n    ;\n};\n\nconst isLeaf = hasProp('ok');\n\nconst flattenBranches = level => ([text, node]) => {\n    const entry = {\n        text, level, isLeaf: isLeaf(node), status: statusOf(node)\n    };\n\n    return (!isLeaf(node))\n        ? [entry, ...fold(node, level + 1)]\n        : [entry]\n    ;\n};\n\nconst fold = (node, level = 0) =>\n    Object.entries(node)\n    .flatMap(flattenBranches(level))\n;\n\nconst last = arr => arr[arr.length -1];\n\nconst getLastResult = node =>\n    !isLeaf(node)\n    ? getLastResult(last(Object.entries(node)))\n    : node\n;\n\nconst ResultsTree = (pathResolver, root = {}) => ({\n    root,\n    push: result => ResultsTree(pathResolver, push(pathResolver(result), result, root)),\n    entries: () => fold(root),\n    latest: () => getLastResult(root)\n});\n\nconst findResult = (name, i) =>\n    find(({ level, text }) => level === i && name === text)\n;\n\nexport const filterResults = _(results =>\n    reduce((acc, name, i) =>\n        [ ...acc, findResult(name, i)(results) ],\n    [])\n);\n\nexport default ResultsTree;\n","export const resolvePath = name => name.split(' › ');","import { resolvePath } from '../results/resolvePath.js';\nimport { pipe, $$ } from '../utils.js';\nconst [join, match, includes] = $$('join', 'match', 'includes')\n\nconst isNoTestFound = includes('No tests found in');\nconst isException = includes('exited with a non-zero exit code');\nconst isUncaughtException = includes('exited with a non-zero exit code: 1');\nconst isExceptionHandlerRunTimeFailure = includes('exited with a non-zero exit code: 7');\n\nconst standardName = join(' › ');\n\nconst noTestFoundToStandard = pipe(\n    match(/^No tests found in [^/]+\\/(.+)\\..*js/),\n    match => match && match[1].split('/'),\n    standardName\n);\n\nconst exceptionToStandard = pipe(\n    match(/^[^/]+\\/(.+)\\..*js exited with a non-zero exit code:/),\n    match => match && match[1].split('/'),\n    standardName\n);\n\nconst normaliseName = name =>\n    isNoTestFound(name)\n    ? noTestFoundToStandard(name)\n    : isException(name)\n    ? exceptionToStandard(name)\n    : name\n;\n\nconst diagName = name =>\n    isNoTestFound(name)\n    ? 'NoTestFound'\n    : isUncaughtException(name)\n    ? 'UncaughtException'\n    : isExceptionHandlerRunTimeFailure\n    ? 'ExceptionHandlerRunTimeFailure'\n    : 'Error'\n;\n\nconst normaliseFailure = result =>\n    result.diag\n    ? result\n    : {\n        ...result,\n        name: normaliseName(result.name),\n        diag: {\n            name: diagName(result.name),\n            message: result.name,\n        }\n    }\n;\n\nconst resultToEntries = result => {\n    const path = resolvePath(result.name);\n    const isLeaf = i => path.length - 1 === i;\n    return path.map((text, level) => ({\n        text, level, isLeaf: isLeaf(level), status: 'fail'\n    }))\n};\n\nconst isFailure = result => !result.ok && !result.todo;\n\nexport default value =>\n    !isFailure(value)\n    ? null\n    : (value\n        |> normaliseFailure\n        |> (result => ({\n            result, entries: resultToEntries(result)\n        }))\n    )\n;","import { _ } from '../utils.js';\nimport { filterResults } from '../results/tree.js';\nimport { resolvePath } from '../results/resolvePath.js';\n\nexport const computeEntries = _(results => log => ({\n    ...log, subset: filterResults(results, log.path)\n}));\n\nexport const assocPath = _(log => ({\n    ...log, path: resolvePath(log.result.name)\n}));","import ResultsTree from '../results/tree.js';\nimport { resolvePath } from '../results/resolvePath.js';\nimport Failure from './Failure.js';\nimport * as Log from './Log.js';\n\nexport const init = () => ({\n    frame: {\n        event: null,\n        needsUpdate: false,\n        write_lock: false,\n        elapsed: 0,\n        resultsTree: ResultsTree(({ name }) => resolvePath(name)),\n        results: [],\n        logs: [],\n        failures: [],\n        summary: null,\n        render: '',\n        end: false\n    }\n});\n\nexport const mutate = store => state => {\n    store.frame = { ...state };\n    return state;\n};\n\n\nconst updateLogs = ({ results, logs, event }) =>\n    event.is('log')\n    ? [...logs, Log.assocPath(event.value)]\n    : event.is('complete')\n    ? logs.map(Log.computeEntries(results))\n    : logs\n;\n\nconst updateResults = ({ failures, resultsTree, event }) => {\n    if (!event.is('result')) return {};\n\n    const { value } = event;\n\n    const failure = Failure(value);\n\n    const newTree = resultsTree.push(\n        failure && failure.result || value\n    );\n\n    return {\n        resultsTree: newTree,\n        results: newTree.entries(),\n        failures: failure ? [...failures, failure] : failures\n    };\n};\n\nconst updateElapsed = ({ elapsed }) =>\n    elapsed + 1\n;\n\nconst updateSummary = ({ summary, event }) =>\n    event.is('complete')\n    ? event.value\n    : summary\n;\n\nconst updateNeedsUpdate = ({ event }) =>\n    event.isNot('write', 'log', 'fail')\n;\n\nconst updateWriteLock = ({ write_lock, event }) =>\n    event.is('write')\n    ? event.value.write_lock\n    : write_lock\n;\n\n\nconst updateEnd = ({ write_lock, summary, event }) =>\n    event.isNot('complete') && summary && !write_lock\n;\n\nexport const update = state => ({\n    ...state,\n    ...updateResults(state),\n    logs: updateLogs(state),\n    elapsed: updateElapsed(state),\n    summary: updateSummary(state),\n    needsUpdate: updateNeedsUpdate(state),\n    write_lock: updateWriteLock(state),\n    end: updateEnd(state)\n});\n","import { defined, $ } from './utils.js';\nconst split = $('split');\n\nconst options = process.argv\n    .slice(2)\n    .map(split('='))\n    .reduce((acc, [key, val]) => {\n        acc[key] = defined(val) ? val : true;\n        return acc;\n    }, {})\n;\n\nexport const width = () =>\n    Math.min(process.stdout.columns, options['max-width'] || Infinity)\n;\nexport const indent = options.indent || 2;\nexport const verbose = Boolean(options.verbose);\nexport const resize = Boolean(options.resize);\nexport const themeVariant = options.theme || 'dark';\n","import chalk from 'chalk';\nimport { readFileSync } from 'fs';\nimport { themeVariant } from '../options.js';\nimport { id, pipe, map, safe, _ } from '../utils.js';\n\nconst defaultDescription = {\n    dark: {\n        text: {\n            default: [0, 0, 85],\n            pass: [100, 100, 37],\n            fail: [0, 100, 60],\n            info: [223, 30, 30],\n            skip: [50, 100, 50],\n            todo: [200, 100, 55],\n            mixed: [0, 0, 65],\n            run:  [270, 80, 65],\n            digit: [55, 100, 55],\n            braces: [255, 80, 70],\n            word: [16, 87, 65]\n        },\n        background: {\n            fail: [355, 50, 27],\n            info: [223, 27, 22],\n            log: [215, 35, 27],\n            '+': [160, 30, 25],\n            '-': [340, 30, 25],\n        }\n    },\n    light: {\n        text: {\n            default: [0, 0, 35],\n            pass: [100, 100, 37],\n            fail: [0, 100, 60],\n            info: [220, 65, 96],\n            skip: [50, 100, 50],\n            todo: [200, 100, 55],\n            mixed: [0, 0, 65],\n            run:  [270, 80, 65],\n            digit: [16, 100, 55],\n            braces: [255, 80, 70],\n            word: [165, 100, 37]\n        },\n        background: {\n            fail: [0, 100, 86],\n            info: [220, 55, 93],\n            log: [180, 45, 90],\n            '+': [160, 50, 90],\n            '-': [340, 50, 90],\n        }\n    }\n};\n\nconst emptyVariant = { text: {}, background: {} };\n\nconst getUserTheme = () => JSON.parse(\n    readFileSync(\n        './slim-reporter-theme.json',\n        { encoding: 'utf8', flag: 'r' }\n    )\n);\n\nconst readColors = _(model => map(\n    ([key, value]) => [key, chalk[model](...value)]\n));\n\nconst readVariant = (d, { text, background }) => ({\n    text: readColors('hsl', { ...d.text, ...text }),\n    background: {\n        ...readColors('bgHsl', { ...d.background, ...background }),\n        ... { ' ': id }\n    }\n});\n\nconst readTheme = _(dfault => pipe(\n    theme => theme ? { ...dfault, ...theme } : dfault,\n    map(([name, variant]) =>\n        [name, readVariant(dfault[name] || emptyVariant, variant)]\n    ),\n));\n\nconst theme = readTheme(defaultDescription, safe(getUserTheme));\n\nexport default theme[themeVariant] || theme.dark;\n","import stripAnsi from 'strip-ansi';\nimport chalk from 'chalk';\nimport theme from './theme.js';\nimport { pipe, $, _ } from '../utils.js';\nconst replace = $('replace');\n\nexport const hasStyle = x => x !== stripAnsi(x);\nexport const length = text => stripAnsi(text).length;\n\nexport const colors = theme.text;\nexport const bg = theme.background;\n\nexport const italic = chalk.italic;\nexport const underline = chalk.underline;\nexport const bold = chalk.bold;\n\nexport const icons = {\n    pass: colors.pass('✔'),\n    fail: colors.fail.bold('⨯'),\n    skip: colors.skip.bold('>'),\n    todo: colors.todo.bold('❏'),\n    mixed: colors.mixed.bold('✎'),\n    run: colors.run.bold('⚑'),\n    '+': colors.pass.bold('+'),\n    '-': colors.fail.bold('-'),\n    ' ': ' '\n};\n\nconst match = reg => str => {\n    const matches = reg.exec(str);\n    return matches && matches[1];\n};\n\nconst first = match(/^\\s*(\\S)/);\nconst last = match(/(\\S)\\s*$/);\n\nexport const isJSONLike = str => {\n    const startBrackets = ['[', '{'];\n    const endBrackets = { '[': ']', '{': '}' };\n    return (\n        startBrackets.includes(first(str))\n        && endBrackets[first(str)] === last(str)\n    );\n};\n\nexport const syntaxColor = pipe(\n    replace(/(\\{|\\}|\\[|\\])/g, colors.braces('$1')),\n    replace(/( \\d+)/g, colors.digit('$1')),\n    replace(/( \\w+:)/g, colors.default('$1')),\n    replace(/,/g, colors.default(',')),\n    colors.word\n);\n\nexport const entryStyle = _(level => isLeaf => text =>\n    isLeaf\n    ? text\n    : level === 0\n    ? bold(text)\n    : level === 1\n    ? underline(text)\n    : text\n);","import { wrapLine, spaces, $$ } from '../utils.js';\nimport { icons, entryStyle } from '../looks/style.js';\nconst [map, join] = $$('map', 'join');\n\nconst layout = indent => ({ level, status }) => (line, i) =>\n    i !== 0 ? line\n    : indent(level) + icons[status] + ' ' + line\n;\n\nconst formatEntry = (wrap, layout) => entry =>\n    entry.text\n    |> entryStyle(entry.level, entry.isLeaf)\n    |> wrap(entry.level)\n    |> map(layout(entry))\n;\n\nexport default (width, indent) => entry => {\n    const indentBy = n => spaces(n * indent);\n    const wrap = level => wrapLine(width, level * indent + 2);\n\n    return entry\n        |> formatEntry(wrap, layout(indentBy))\n        |> join('\\n')\n    ;\n};\n","import { pipe, last, init, empty, $$ } from '../utils.js';\nconst [map, reduce, flatMap, join] = $$('map', 'reduce', 'flatMap', 'join');\n\nconst belongsToNextSuite = (groups, entry) => {\n    const lastEntry = last(last(groups));\n    return entry.level < lastEntry.level\n    || !entry.isLeaf && lastEntry.isLeaf\n}\n\nconst groupBySuite = reduce((groups, entry) =>\n    empty(groups)\n    ? [[entry]]\n    : belongsToNextSuite(groups, entry)\n    ? [...groups, [entry]]\n    : [...init(groups), [...last(groups), entry]]\n, []);\n\nexport default Entry => pipe(\n    groupBySuite,\n    map(flatMap(Entry)),\n    map(join('\\n')),\n    join('\\n\\n')\n);\n\n","import { hasStyle, length } from '../looks/style.js';\nimport { spaces, wrapLine, _ } from '../utils.js';\n\nconst _title = (color, width, text='') => {\n    const w = Math.max(2, width - length(text));\n    const space = spaces(Math.floor(w / 2));\n    return color(space + text + space);\n}\n\nexport default ({ width }) => _(color => text => {\n    const render = text => _title(color, width(), text);\n\n    return hasStyle(text)\n        ? render(text)\n        : wrapLine(width() - 1, 1, text)\n            .map(render)\n            .join('\\n')\n    ;\n});\n","import { repeat } from '../utils.js';\n\nexport const dots = (n, i) =>\n    i === undefined\n    ? i => dots(n, i)\n    : repeat('.', (i + 1) % (n + 1))\n;\n\nexport default waits => 'awaiting results' + dots(3, waits);","import { bg } from '../looks/style.js';\nimport { pipe, _, $ } from '../utils.js';\nconst join = $('join');\n\nconst layout = _(Title => pipe(\n    report => [\n        Title(bg.info, 'Test Report'),\n        report.replace(/^\\n*/, '')\n    ],\n    join('\\n\\n'),\n));\n\nexport default _(Entries => Title => pipe(\n    Entries,\n    xs => xs.length ? layout(Title, xs) : ''\n));","import { icons, colors, bg } from '../looks/style.js';\nimport { id, pipe, $$, _ } from '../utils.js';\nconst [filter, join] = $$('filter', 'join');\n\nconst print = (s, x) =>\n    !x ? null : colors[s](icons[s] + ' ' + x)\n;\n\nconst space = pipe(filter(id), join(colors.info.bold(' | ')));\n\n\nconst render = ({ count, fail, pass, skip, todo }) =>\n    space([\n        print('run', count - todo - skip),\n        print('pass', pass - skip),\n        print('fail', fail - todo),\n        print('skip', skip),\n        print('todo', todo)\n    ])\n;\n\nexport default _(Title => summary =>\n    Title(bg.info, render(summary))\n);\n","import { icons, bg, syntaxColor } from '../looks/style.js';\nimport {id, splitJoin, wrap, prop, indent, $$, _ } from '../utils.js';\nconst [replace, join, map] = $$('replace', 'join', 'map');\n\nconst difference = prop('Difference:');\n\nconst coordOf = replace(/^.+(?:\\..*js).*?:/, '');\n\nconst bannerText = ({ name, assertion, at }) => {\n    const detail = assertion && wrap('(', ')')(assertion);\n    const location = at && `at ${coordOf(at)}`;\n    return [name, detail, location].filter(id).join(' ')\n}\n\nconst DiffFailure = values => {\n    const style = (type, line) =>\n        line\n        |> syntaxColor\n        |> bg[type]\n        |> replace(type, icons[type])\n    ;\n\n    const details = values\n        |> difference\n        |> splitJoin(\n            map(line =>\n                line && style(line[0], line)\n            ), '\\n'\n        )\n        |> (x => '\\n' + x)\n    ;\n\n    return 'Difference:\\n' + details;\n}\n\nconst DetailedFailure = (message, values, wrapLine) => {\n    const details = values\n        |> Object.values\n        |> join('/n')\n        |> wrapLine\n        |> join('/n')\n        |> indent(3)\n        |> syntaxColor\n        |> (x => '\\n' + x)\n    ;\n\n    return message + ':\\n' + details;\n}\n\nconst LaconicFailure = (message, wrapLine) =>\n    (message |> wrapLine |> join('\\n')) + '.'\n;\n\nconst Failure = ({ message, values }, wrapLine) =>\n    !values\n    ? LaconicFailure(message, wrapLine)\n    : difference(values)\n    ? DiffFailure(values)\n    : DetailedFailure(message, values, wrapLine)\n;\n\nexport default _(Entries => Title => wrapLine => map(\n    ({ result, entries }) => [\n        Title(bg.fail, bannerText(result.diag)),\n        wrap('\\n')(Entries(entries)),\n        Failure(result.diag, wrapLine)\n    ].join('\\n'))\n);\n","import { bg, syntaxColor, isJSONLike } from '../looks/style.js';\nimport { id, pipe, either, $$, _ } from '../utils.js';\nconst [map, join] = $$('map', 'join');\n\nconst layout = title => pipe(\n    ({ origin, message }) => [\n        title, [origin, message].join('\\n')\n    ],\n    join('\\n\\n')\n);\n\nconst formatMessage = either(isJSONLike, syntaxColor, id);\n\nconst format = Entries => ({ subset, message }) => {\n    const origin = Entries(subset) + '\\n';\n    return { origin, message: formatMessage(message) };\n};\n\nexport default _(Entries => Title => map(pipe(\n    format(Entries),\n    layout(Title(bg.log, 'Log'))\n)));\n","import Entry from './components/Entry.js';\nimport Entries from './components/Entries.js';\nimport Title from './components/Title.js';\nimport Loading from './components/Loading.js';\nimport Report from './components/Report.js';\nimport Summary from './components/Summary.js';\nimport Failures from './components/Failures.js';\nimport Log from './components/Log.js';\nimport { id, pipe, wrapLine, indent, wrap, $$ } from './utils.js';\nconst [filter, join] = $$('filter', 'join');\n\nconst layout = ({ width }) => pipe(\n    filter(id),\n    join('\\n\\n'),\n    indent((process.stdout.columns - width()) / 2 | 0),\n    wrap('\\n'),\n);\n\nconst render = ({ width, indent, verbose }) => {\n    const $Entry = Entry(width(), indent);\n    const $Entries = Entries($Entry);\n    const $Title = Title({width});\n    const $simpleWrap = wrapLine(width(), 0);\n\n    return state => [\n        verbose && Report($Entries, $Title, state.results),\n        state.summary && [\n            Failures($Entries, $Title, $simpleWrap, state.failures),\n            verbose && Log($Entries, $Title, state.logs),\n            Summary($Title, state.summary)\n        ],\n        !state.summary && Loading(state.elapsed)\n    ].flat(2);\n};\n\nexport default options => state => ({\n    ...state,\n    render: state |> render(options) |> layout(options)\n});\n","const clearAll = '\\x1Bc\\r';\n\nexport default event => state => {\n    if (state.needsUpdate && !state.write_lock) {\n        event('write', { write_lock: true });\n\n        process.stdout.write(\n            clearAll + state.render,\n            null,\n            () => setTimeout(\n                () => event('write', { write_lock: false }),\n                20\n            )\n        )\n    }\n\n    return state;\n};","export default (resize, event) => {\n    if (resize) {\n        process.stdout.on('resize', event);\n        // keep the terminal session open\n        setInterval(() => {}, 300);\n    }\n}","export default (event, delta) => {\n    const timer = setInterval(event, delta);\n    return { stop: () => clearInterval(timer) }\n}","#!/usr/bin/env node\n\nimport Parser from 'tap-parser';\nimport { _ } from './utils.js';\nimport { Event, passEvent } from './events.js';\nimport logEvent from './logEvent.js';\nimport { init, update, mutate } from './states/state.js';\nimport render from './render.js';\nimport print from './io/print.js';\nimport resize from './io/resize.js';\nimport Clock from './io/clock.js';\nimport * as options from './options.js';\n\nconst store = init();\n\nconst main = state =>\n    state\n    |> update\n    |> render(options)\n    |> mutate(store)\n    |> print(event)\n    |> release(clock)\n;\n\nconst parser = new Parser();\nconst event = _(passEvent(store, main));\nconst register = e => logEvent(event('log'), Event(e));\n\nparser.on('result', event('result'));\nparser.on('comment', register('comment'));\nparser.on('complete', register('complete'));\nparser.on('result', register('result'));\nparser.on('complete', event('complete'));\nparser.on('fail', event('fail'));\nresize(options.resize, event('resize'))\nconst clock = Clock(event('clock'), 120);\n\nconst release = clock => ({ end }) =>\n    end && clock.stop()\n;\n\nprocess.stdin.pipe(parser);\n\nconsole.clear();\n"],"names":["id","x","compose","f","g","apply","pipe","fs","reduceRight","_","xs","reduce","eq","a","b","prop","p","defined","undefined","hasProp","either","t","last","arr","length","init","slice","empty","not","$","method","args","Error","map","Array","isArray","Object","fromEntries","entries","$$","repeat","s","n","fill","join","spaces","wrap","before","after","splitJoin","s1","s2","str","split","indent","wrapLine","max","indentation","lines","current","forEach","word","trim","i","safe","out","Event","type","value","is","isNot","passEvent","store","frame","event","isLog","text","substring","cleanup","replace","removeLastReturn","log","message","concatMessage","local","result","send","source","reduceStatus","every","find","isLeaf","getStatus","searchChild","skip","todo","ok","statusOf","childNode","values","push","path","node","index","name","next","done","flattenBranches","level","entry","status","fold","flatMap","getLastResult","ResultsTree","pathResolver","root","latest","findResult","filterResults","results","acc","resolvePath","match","includes","isNoTestFound","isException","isUncaughtException","isExceptionHandlerRunTimeFailure","standardName","noTestFoundToStandard","exceptionToStandard","normaliseName","diagName","normaliseFailure","diag","resultToEntries","isFailure","computeEntries","subset","assocPath","needsUpdate","write_lock","elapsed","resultsTree","logs","failures","summary","render","end","mutate","state","updateLogs","Log","updateResults","failure","Failure","newTree","updateElapsed","updateSummary","updateNeedsUpdate","updateWriteLock","updateEnd","update","options","process","argv","key","val","width","Math","min","stdout","columns","Infinity","verbose","Boolean","resize","themeVariant","theme","defaultDescription","dark","default","pass","fail","info","mixed","run","digit","braces","background","light","emptyVariant","getUserTheme","JSON","parse","readFileSync","encoding","flag","readColors","model","chalk","readVariant","d","readTheme","dfault","variant","hasStyle","stripAnsi","colors","bg","italic","underline","bold","icons","reg","matches","exec","first","isJSONLike","startBrackets","endBrackets","syntaxColor","entryStyle","layout","line","formatEntry","indentBy","belongsToNextSuite","groups","lastEntry","groupBySuite","Entry","_title","color","w","space","floor","dots","waits","Title","report","Entries","filter","print","count","difference","coordOf","bannerText","assertion","at","detail","location","DiffFailure","style","details","DetailedFailure","LaconicFailure","title","origin","formatMessage","format","$Entry","$Entries","$Title","$simpleWrap","Report","Failures","Summary","Loading","flat","clearAll","write","setTimeout","on","setInterval","delta","timer","stop","clearInterval","main","release","clock","parser","Parser","register","e","logEvent","Clock","stdin","console","clear"],"mappings":"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"}